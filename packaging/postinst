#!/bin/bash
# This is the post-installation script for health-nag

INSTALL_DIR="/usr/share/health-nag"
SCRIPT_NAME="screen_overlay.py"
REMINDERS_FILE="/etc/health-nag/reminders.json"
CRON_MARKER="# SCREEN_OVERLAY_REMINDER"
LOG_FILE="/var/log/health-nag.log"

# Function to log messages
log_message() {
    echo "$(date +"%Y-%m-%d %H:%M:%S") - $1" >> "$LOG_FILE"
}

# Function to remove existing crontab entries
remove_existing_crontab() {
    current_crontab=$(crontab -l 2>/dev/null)
    if echo "$current_crontab" | grep -q "$CRON_MARKER"; then
        log_message "Removing existing crontab entries with marker: $CRON_MARKER"
        echo "$current_crontab" | grep -v "$CRON_MARKER" | crontab -
    else
        log_message "No existing crontab entries to remove."
    fi
}

# Function to add new crontab entry
add_crontab_entry() {
    (crontab -l 2>/dev/null; echo "$1 >> $LOG_FILE 2>&1 $CRON_MARKER") | crontab -
}

# Create necessary directories
mkdir -p "$INSTALL_DIR/art"
log_message "Created art directory $INSTALL_DIR/art"

clear_log_file() {
    echo "" > "$LOG_FILE"
    log_message "Log file cleared"
}

# Clear log file and remove existing crontab entries
clear_log_file
remove_existing_crontab

# Read reminders.json and create cron jobs
if [ -f "$REMINDERS_FILE" ]; then
    jq -c '.[]' "$REMINDERS_FILE" | while read -r reminder; do
        name=$(echo "$reminder" | jq -r '.name')
        cron=$(echo "$reminder" | jq -r '.cron')
        add_crontab_entry "$cron $INSTALL_DIR/$SCRIPT_NAME --name \"$name\""
        log_message "Added cron job for reminder '$name': $cron"
    done
else
    log_message "Error: $REMINDERS_FILE not found."
    exit 1
fi
